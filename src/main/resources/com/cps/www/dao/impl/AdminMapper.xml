<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cps.www.dao.AdminDao">
    <!-- Admin的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Admin_Map" type="com.cps.www.entity.Admin">
        <id column="admin_id" property="adminId"/>
        <result column="admin_name" property="adminName"/>
        <result column="admin_password" property="adminPassword"/>
    </resultMap>

    <!-- 数据库中表名为:c_admin的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="c_admin_Column">
        c_admin.admin_id as admin_id
        ,c_admin.admin_name as admin_name
        ,c_admin.admin_password as admin_password
    </sql>

    <!--获得类名为:Admin对应的数据库表的数据总行数 -->
    <select id="getAdminRowCount" resultType="java.lang.Long">
        select count(admin_id) from c_admin
    </select>
    <!-- 获得类名为:Admin对应数据库中表的数据集合 -->
    <select id="selectAdmin" resultMap="result_Admin_Map">
        select
        <include refid="c_admin_Column"/>
        from c_admin
    </select>

    <!-- 获得一个Admin对象,以参数Admin对象中不为空的属性作为条件进行查询-->
    <select id="selectAdminByObj" parameterType="com.cps.www.entity.Admin" resultMap="result_Admin_Map">
        select
        <include refid="c_admin_Column"/>
        from c_admin
        <where>
            <if test="adminPassword != null ">and c_admin.admin_password = #{adminPassword}</if>
            <if test="adminName != null ">and c_admin.admin_name = #{adminName}</if>
            <if test="adminId != null ">and c_admin.admin_id = #{adminId}</if>
        </where>
    </select>

    <!-- 通过Admin的id获得对应数据库中表的数据对象-->
    <select id="selectAdminById" parameterType="java.lang.Integer" resultMap="result_Admin_Map">
        select
        <include refid="c_admin_Column"/>
        from c_admin
        where c_admin.admin_id = #{id}
    </select>

    <!-- 获得类名为:Admin对应数据库中表的数据集合 -->
    <select id="selectAdminByName" parameterType="java.lang.String" resultMap="result_Admin_Map">
        select
        <include refid="c_admin_Column"/>
        from c_admin
        where c_admin.admin_name = #{adminName}
    </select>


    <!-- 将Admin插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertAdmin" parameterType="com.cps.www.entity.Admin">
        insert into c_admin(admin_id,admin_name,admin_password) 
        values(0,#{adminName},#{adminPassword})
    </insert>

    <!-- 将Admin中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyAdmin" parameterType="com.cps.www.entity.Admin">
        insert into c_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">admin_id,</if>
            <if test="adminName != null">admin_name,</if>
            <if test="adminPassword != null">admin_password,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">0,</if>
            <if test="adminName != null">#{adminName},</if>
            <if test="adminPassword != null">#{adminPassword},</if>
        </trim>
    </insert>

    <!-- 通过Admin的id将数据库表中对应的数据删除-->
    <delete id="deleteAdminById" parameterType="java.lang.Integer">
        delete from c_admin
        where admin_id = #{id}
    </delete>

    <!-- 通过Admin的id将Admin的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateAdminById" parameterType="com.cps.www.entity.Admin">
        update c_admin set
            admin_name=#{adminName}
            ,admin_password=#{adminPassword}
        where admin_id=#{adminId}
    </update>

    <!-- 通过Admin的id将Admin中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyAdminById" parameterType="com.cps.www.entity.Admin">
        update c_admin
        <set>
            <if test="adminName != null">
                admin_name=#{adminName},
            </if>
            <if test="adminPassword != null">
                admin_password=#{adminPassword},
            </if>
        </set>
        where admin_id=#{adminId}
    </update>

</mapper>